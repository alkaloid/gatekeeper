---
# This assumes that the door is running a Raspberry Pi.
- hosts: doors
  remote_user: pi
  sudo: yes
  tasks:
  - shell: /usr/bin/raspi-config --expand-rootfs
    args:
      creates: /etc/rootfs-expanded
    register: rootfs_expanded
  - shell: /bin/touch /etc/rootfs-expanded
    args:
      creates: /etc/rootfs-expanded
  - name: reboot to get larger rootfs
    command: shutdown -r now "Ansible triggered - grow root filesystem"
    async: 0
    poll: 0
    ignore_errors: true
    when: rootfs_expanded is defined
  - name: waiting for server to come back
    # Note that the port parameter is required because of https://github.com/ansible/ansible/issues/9983
    local_action: wait_for host={{ inventory_hostname }} state=started port=22
    sudo: false
    when: rootfs_expanded is defined

- hosts: all
  remote_user: pi
  sudo: yes
  tasks:
  - name: Add Erlang Solutions packaging key
    apt_key: url=https://packages.erlang-solutions.com/debian/erlang_solutions.asc state=present
  - name: Add Erlang Solutions repository
    apt_repository: repo='deb http://packages.erlang-solutions.com/debian wheezy contrib' state=present
  - name: Install Erlang Solutions Elixir package
    apt: name=elixir state=latest
  - name: Install Development Erlang Headers
    apt: name=erlang-dev state=latest
  - name: Install Erlang parse tools (needed for yecc module, which is needed by mimetype_parser)
    apt: name=erlang-parsetools state=latest
  - name: Install cmake
    apt: name=cmake state=latest
  - name: Install PostgreSQL
    apt: name=postgresql state=latest
  - name: Install python-psycopg2 (required for Ansible)
    apt: name=python-psycopg2 state=latest

- hosts: all
  remote_user: pi
  sudo: yes
  sudo_user: postgres
  tasks:
  - name: Create Gatekeeper database role
    postgresql_user: "name=gatekeeper password={{ postgresql_password }}"

  - name: Create Gatekeeper database
    postgresql_db: name=gatekeeper owner=gatekeeper template=template0

- hosts: all
  remote_user: pi
  sudo: yes
  tasks:
  - user: name=gatekeeper home=/var/www groups=gpio,dialout

- hosts: all
  remote_user: pi
  sudo: yes
  roles:
    - nodesource.node
    - jacoelho.phoenix-app
  vars:
    phoenix_app_name: gatekeeper
    phoenix_app_user: gatekeeper
    phoenix_app_group: gatekeeper
    phoenix_app_path: /var/www
    phoenix_app_port: 4000
    phoenix_app_mix_env: prod
    phoenix_app_repository: "https://github.com/alkaloid/gatekeeper.git"
    phoenix_app_version: feature/deployment
    phoenix_app_run_brunch: true
    phoenix_app_run_migrate: true
    phoenix_app_env: {}
    phoenix_app_configs: []
